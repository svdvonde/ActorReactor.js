const commMedium_1 = require("./commMedium");
const sockets_1 = require("./sockets");
/**
 * Created by flo on 18/01/2017.
 */
class ChannelManager extends commMedium_1.CommMedium {
    init(messageHandler) {
        this.messageHandler = messageHandler;
        this.connections = new Map();
        this.socketHandler = new sockets_1.SocketHandler(this);
    }
    newConnection(actorId, channelPort) {
        channelPort.onmessage = (ev) => {
            this.messageHandler.dispatch(JSON.parse(ev.data), ev.ports);
        };
        this.connections.set(actorId, channelPort);
    }
    //Open connection to Node.js instance owning the object to which the far reference refers to
    openConnection(actorId, actorAddress, actorPort) {
        this.socketHandler.openConnection(actorId, actorAddress, actorPort);
    }
    hasConnection(actorId) {
        var inChannel = this.connections.has(actorId);
        var connected = this.connectedActors.has(actorId);
        var disconnected = this.socketHandler.disconnectedActors.indexOf(actorId) != -1;
        return inChannel || connected || disconnected;
    }
    sendMessage(actorId, message) {
        if (this.connections.has(actorId)) {
            this.connections.get(actorId).postMessage(JSON.stringify(message));
        }
        else if (this.connectedActors.has(actorId) || this.socketHandler.disconnectedActors.indexOf(actorId) != -1) {
            this.socketHandler.sendMessage(actorId, message);
        }
        else {
            throw new Error("Unable to send message to unknown actor (channel manager)");
        }
    }
}
exports.ChannelManager = ChannelManager;
//# sourceMappingURL=ChannelManager.js.map